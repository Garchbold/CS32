{\rtf1\ansi\ansicpg1252\cocoartf1345\cocoasubrtf380
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 George Archbold\
CS 32\
\
2. \
\
Stack: \
(6,4)\
(6,3)\
(6,5)\
(7,5)\
(8,6)\
(8,6)\
(8,7)\
(8,8)\
(7,8)\
(6,6)\
(5,4)\
(4,4)\
\
4.\
Queue:\
(6,4)\
(5,4)\
(6,5)\
(6,3)\
(6,6)\
(7,5)\
(3,4)\
(4,5)\
(8,5)\
(2,4)\
(4,6)\
\
The way these to programs work is that they are given a starting cell, and from there they scan they\'92re adjacent cells to see which ones are possible to move in ( based on discovery status and whether its a wall or not) they record these in their respective manners. They then go back to the stack or queue where they recorded the available cells and move to the next recorded cell to check from there. However, they differ in the order that they retrieve the next cell to check. The stack begins by visiting the last cell that it recorded to be available, whereas the queue begins by visiting the first it recorded. This is because stack operate as first in last out structures and queues operate as first in first out structures.}