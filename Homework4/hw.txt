{\rtf1\ansi\ansicpg1252\cocoartf1345\cocoasubrtf380
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red63\green110\blue116;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 George Archbold\
Homework 4\
\
2. The problem with this code, is in the comparison operators. The function insert tries to compare a certain \'93value\'94 to the value pointed to by p, however these values are of type 
\f1\fs22 \cf2 \CocoaLigature0 Complex 
\f0\fs24 \cf0 \CocoaLigature1 and therefor cannot simply be compared by a \'93>\'94 sign because the complier does not know how to justify if one 
\f1\fs22 \cf2 \CocoaLigature0 Complex 
\f0\fs24 \cf0 \CocoaLigature1 object is larger than another.\
\
3b. We cannot implement this listAll function without the path parameter because this is the only way we can keep track of the path we are following through each recursive call with out having to use a global variable to store it.\
\
4a. This algorithm is O(N^3) because it is just simply 3 nested for loops that all iterate N times.\
\
4b. This algorithm is also O(N^3). Although this algorithm does take advantage of the symmetry of friendship, the only actual difference in the code is in the middle loop, which changes it iteration to loop to the i value from the loop surrounding it. This does cut down some cases however big O looks at cases with very large numbers, and in the outer loops last iteration \'93i\'94 will equal N-1 and j will iterate up to that which does not make a big enough difference to change its time complexity.\
\
5a. This algorithm is also O(N^2). There are two main loops that effect run time complexity in this algorithm, all other function calls are constant. Each loop iterates on the order of N times, and the only function called that isn\'92t constant is the nodeAtPos function, which is of order N. This makes these two loops both O(N^2) and the over algorithm the same.\
\
5b. This algorithm is O(N). The first loop dominates the run time complexity which loops through both seq1 and seq2 simultaneously N times.}